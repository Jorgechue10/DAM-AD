<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-reverse-engineering PUBLIC "-//Hibernate/Hibernate Reverse Engineering DTD 3.0//EN" "http://hibernate.org/dtd/hibernate-reverse-engineering-3.0.dtd" >

<hibernate-reverse-engineering>
<type-mapping>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string"></sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="20"
		not-null="true">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="20"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="9"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="4"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string"></sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="5"
		not-null="true">
	</sql-type>
	<sql-type jdbc-type="INTEGER" hibernate-type="int"
		not-null="true">
	</sql-type>
	<sql-type jdbc-type="REAL" hibernate-type="java.lang.Float"
		precision="12" not-null="false">
	</sql-type>
	<sql-type jdbc-type="REAL" hibernate-type="java.lang.Float"
		precision="12" not-null="false">
	</sql-type>
	<sql-type jdbc-type="REAL" hibernate-type="java.lang.Float"
		precision="12" not-null="false">
	</sql-type>
	<sql-type jdbc-type="REAL" hibernate-type="java.lang.Float"
		precision="12" not-null="false">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string"></sql-type>
	<sql-type jdbc-type="INTEGER" hibernate-type="int"
		not-null="true">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="20"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="4"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="20"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="5"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="INTEGER" hibernate-type="java.lang.Integer"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="30"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string"></sql-type>
	<sql-type jdbc-type="INTEGER" hibernate-type="int"
		not-null="true">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="5"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="20"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="INTEGER" hibernate-type="java.lang.Integer"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="INTEGER" hibernate-type="java.lang.Integer"
		not-null="false">
	</sql-type>
	<sql-type jdbc-type="VARCHAR" hibernate-type="string" length="20"
		not-null="false">
	</sql-type>
</type-mapping>
<table-filter match-catalog="nba" match-name="equipos"/>
  <table-filter match-catalog="nba" match-name="estadisticas"/>
  <table-filter match-catalog="nba" match-name="jugadores"/>
  <table-filter match-catalog="nba" match-name="partidos"/>
</hibernate-reverse-engineering>