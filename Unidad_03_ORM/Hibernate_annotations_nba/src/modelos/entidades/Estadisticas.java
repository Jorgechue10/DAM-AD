package modelos.entidades;
// Generated 19-dic-2018 15:41:00 by Hibernate Tools 5.2.11.Final

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Estadisticas generated by hbm2java
 */
@Entity
@Table(name = "estadisticas", catalog = "nba")
public class Estadisticas implements java.io.Serializable {

	private EstadisticasId id;
	private Jugadores jugadores;
	private Float puntosPorPartido;
	private Float asistenciasPorPartido;
	private Float taponesPorPartido;
	private Float rebotesPorPartido;

	public Estadisticas() {
	}

	public Estadisticas(EstadisticasId id, Jugadores jugadores) {
		this.id = id;
		this.jugadores = jugadores;
	}

	public Estadisticas(EstadisticasId id, Jugadores jugadores, Float puntosPorPartido, Float asistenciasPorPartido,
			Float taponesPorPartido, Float rebotesPorPartido) {
		this.id = id;
		this.jugadores = jugadores;
		this.puntosPorPartido = puntosPorPartido;
		this.asistenciasPorPartido = asistenciasPorPartido;
		this.taponesPorPartido = taponesPorPartido;
		this.rebotesPorPartido = rebotesPorPartido;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "temporada", column = @Column(name = "temporada", nullable = false, length = 5)),
			@AttributeOverride(name = "jugador", column = @Column(name = "jugador", nullable = false)) })
	public EstadisticasId getId() {
		return this.id;
	}

	public void setId(EstadisticasId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "jugador", nullable = false, insertable = false, updatable = false)
	public Jugadores getJugadores() {
		return this.jugadores;
	}

	public void setJugadores(Jugadores jugadores) {
		this.jugadores = jugadores;
	}

	@Column(name = "Puntos_por_partido", precision = 12, scale = 0)
	public Float getPuntosPorPartido() {
		return this.puntosPorPartido;
	}

	public void setPuntosPorPartido(Float puntosPorPartido) {
		this.puntosPorPartido = puntosPorPartido;
	}

	@Column(name = "Asistencias_por_partido", precision = 12, scale = 0)
	public Float getAsistenciasPorPartido() {
		return this.asistenciasPorPartido;
	}

	public void setAsistenciasPorPartido(Float asistenciasPorPartido) {
		this.asistenciasPorPartido = asistenciasPorPartido;
	}

	@Column(name = "Tapones_por_partido", precision = 12, scale = 0)
	public Float getTaponesPorPartido() {
		return this.taponesPorPartido;
	}

	public void setTaponesPorPartido(Float taponesPorPartido) {
		this.taponesPorPartido = taponesPorPartido;
	}

	@Column(name = "Rebotes_por_partido", precision = 12, scale = 0)
	public Float getRebotesPorPartido() {
		return this.rebotesPorPartido;
	}

	public void setRebotesPorPartido(Float rebotesPorPartido) {
		this.rebotesPorPartido = rebotesPorPartido;
	}

}
